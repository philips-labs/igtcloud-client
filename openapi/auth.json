{
  "swagger": "2.0",
  "basePath": "/auth",
  "paths": {
    "/audit-trail": {
      "post": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "operationId": "post_audit_resource",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AuditTrail"
            }
          }
        ],
        "tags": [
          "auth"
        ]
      }
    },
    "/introspect": {
      "get": {
        "responses": {
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/4xxMessage"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IntrospectResponse"
            }
          }
        },
        "operationId": "get_introspect_resource",
        "parameters": [
          {
            "name": "X-Fields",
            "in": "header",
            "type": "string",
            "format": "mask",
            "description": "An optional fields mask"
          }
        ],
        "tags": [
          "auth"
        ]
      }
    },
    "/login": {
      "post": {
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/4xxMessage"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/4xxMessage"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          }
        },
        "summary": "Authorize by using your IAM credentials",
        "description": "Set the grant type to 'password' for user authentication.             Set the grant type 'jwt-key' for service authentication.             Service authentication is only available for inside the hospitals in order to up/download data.",
        "operationId": "post_login_resource_/login",
        "parameters": [
          {
            "name": "$includes3creds",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LoginModel"
            }
          }
        ],
        "security": [],
        "tags": [
          "auth"
        ]
      }
    },
    "/login/$aud": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          }
        },
        "summary": "Retrieve 'aud' property used for assertion login",
        "operationId": "get_login_aud_resource",
        "security": [],
        "tags": [
          "auth"
        ]
      }
    },
    "/logout": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LogoutResponse"
            }
          }
        },
        "operationId": "post_logout_resource",
        "parameters": [
          {
            "name": "hasExpired",
            "in": "query",
            "type": "boolean",
            "default": false
          }
        ],
        "tags": [
          "auth"
        ]
      }
    },
    "/permissions": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PermissionsResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/4xxMessage"
            }
          }
        },
        "summary": "Gets a list of permissions",
        "operationId": "get_permissions_resource",
        "parameters": [
          {
            "name": "X-Fields",
            "in": "header",
            "type": "string",
            "format": "mask",
            "description": "An optional fields mask"
          }
        ],
        "tags": [
          "auth"
        ]
      }
    },
    "/refresh": {
      "post": {
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/4xxMessage"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/4xxMessage"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          }
        },
        "operationId": "post_refresh_resource",
        "tags": [
          "auth"
        ]
      }
    },
    "/s3credentials": {
      "get": {
        "responses": {
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/4xxMessage"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/S3CredentialResponse"
            }
          }
        },
        "operationId": "get_s3_credentials_resource",
        "parameters": [
          {
            "name": "prefix",
            "in": "query",
            "type": "string"
          },
          {
            "name": "action",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "X-Fields",
            "in": "header",
            "type": "string",
            "format": "mask",
            "description": "An optional fields mask"
          }
        ],
        "tags": [
          "auth"
        ]
      }
    }
  },
  "info": {
    "title": "Apis",
    "version": "1.0",
    "description": "Api containing all apis"
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "securityDefinitions": {
    "csrf_token": {
      "type": "apiKey",
      "in": "header",
      "name": "X-CSRF-TOKEN"
    },
    "jwt": {
      "type": "apiKey",
      "in": "header",
      "name": "X-JWT"
    }
  },
  "security": [
    {
      "csrf_token": []
    },
    {
      "jwt": []
    }
  ],
  "tags": [
    {
      "name": "auth"
    }
  ],
  "definitions": {
    "LoginModel": {
      "properties": {
        "grantType": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "assertion": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "4xxMessage": {
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LoginResponse": {
      "properties": {
        "CSRFToken": {
          "type": "string"
        },
        "sub": {
          "type": "string"
        },
        "S3Credentials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/S3Credential"
          }
        }
      },
      "type": "object"
    },
    "S3Credential": {
      "properties": {
        "allowed": {
          "$ref": "#/definitions/Allowed"
        },
        "credentials": {
          "$ref": "#/definitions/Credentials"
        },
        "resourceType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Allowed": {
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "Credentials": {
      "properties": {
        "accessKey": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        },
        "sessionToken": {
          "type": "string"
        },
        "bucket": {
          "type": "string"
        },
        "expires": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LogoutResponse": {
      "properties": {
        "success": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "IntrospectResponse": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "scope": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "exp": {
          "type": "integer"
        },
        "sub": {
          "type": "string"
        },
        "iss": {
          "type": "string"
        },
        "client_id": {
          "type": "string"
        },
        "token_type": {
          "type": "string"
        },
        "identity_type": {
          "type": "string",
          "example": "Device",
          "enum": [
            "Device",
            "User",
            "Service",
            "Client"
          ]
        },
        "organizations": {
          "$ref": "#/definitions/Organizations"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "Organizations": {
      "properties": {
        "managingOrganization": {
          "type": "string"
        },
        "organizationList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Organization"
          }
        }
      },
      "type": "object"
    },
    "Organization": {
      "properties": {
        "organizationId": {
          "type": "string"
        },
        "organizationName": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "S3CredentialResponse": {
      "properties": {
        "policyCredentials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/S3Credential"
          }
        }
      },
      "type": "object"
    },
    "PermissionsResponse": {
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "AuditTrail": {
      "properties": {
        "eventAction": {
          "type": "string"
        },
        "eventOutcome": {
          "type": "string"
        },
        "eventSubtype": {
          "type": "string"
        },
        "eventType": {
          "type": "string"
        },
        "applicationName": {
          "type": "string"
        },
        "applicationVersion": {
          "type": "string"
        },
        "componentName": {
          "type": "string"
        },
        "arguments": {
          "type": "string"
        },
        "objectType": {
          "type": "string"
        },
        "objectLifecycle": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "responses": {
    "ParseError": {
      "description": "When a mask can't be parsed"
    },
    "MaskError": {
      "description": "When any error occurs on mask"
    }
  }
}
